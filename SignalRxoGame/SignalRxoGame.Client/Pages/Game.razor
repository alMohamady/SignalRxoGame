@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using SignalRxoGame.shared
@inject NavigationManager nm
@rendermode @(new InteractiveWebAssemblyRenderMode(false))

<h3>Welcome to X-O Game</h3>
@if (myRoom is null)
{
    <div class="row">
        <div class="col-2">
            Player Name:
        </div>
        <div class="col-6">
            <input @bind="playerName" placeholder="Enter the Name" />
        </div>
    </div>
    <div class="row">
        <div class="col-2">
            Room Name:
        </div>
        <div class="col-6">
            <input @bind="currentRoomName" placeholder="Enter the room Name" />
        </div>
    </div>
    <div class="row">
        <div class="col-3">
        </div>
        <div class="col-6">
            <button @onclick="CreateRoom">Create room</button>
        </div>
    </div>

    <hr />
    <h4>Rooms available</h4>
    <ul>
        @foreach(var r in roomlist)
        {
            <li>
                <span>@r.RoomName</span>
                <button @onclick="() => JoinRoom(r.RoomId)">Join</button>
            </li>
        }
    </ul>
}
else
{
    <CascadingValue Value="hubConnection">
        <Room myRoom="myRoom" />
    </CascadingValue>
}

@code {
    private HubConnection? hubConnection;
    private string playerName = string.Empty;
    private string currentRoomName = string.Empty;
    private GameRoom? myRoom;
    private List<GameRoom> roomlist = new(); 

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
         .WithUrl(nm.ToAbsoluteUri("/mygamehyb"))
         .Build();

        hubConnection.On<List<GameRoom>>("Rooms", (roomList) =>
        {
            Console.WriteLine($" The Total of all rooms count = {roomList.Count}");    
        }); 

        await hubConnection.StartAsync();
    }

    private async Task CreateRoom()
    {
        if (hubConnection is not null)
        {
            myRoom = await hubConnection.InvokeAsync<GameRoom>("CreateRoom", playerName, currentRoomName);
        }
    }

    private async Task JoinRoom(string roomId)
    {
        if (hubConnection is not null)
        {
            var theRoom = await hubConnection.InvokeAsync<GameRoom>("JoinRoom", roomId, playerName);
            if (theRoom is not null)
            {
                myRoom = theRoom;
            }
            else
            {
                Console.WriteLine("Room is not available ");
            }
        }
    }
}
